#
# Copyright (c) 2004-2012 The YAWL Foundation. All rights reserved.
# The YAWL Foundation is a collaboration of individuals and
# organisations who are committed to improving workflow technology.
#
# This file is part of YAWL. YAWL is free software: you can
# redistribute it and/or modify it under the terms of the GNU Lesser
# General Public License as published by the Free Software Foundation.
#
# YAWL is distributed in the hope that it will be useful, but WITHOUT
# ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
# or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General
# Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with YAWL. If not, see <http://www.gnu.org/licenses/>.
#

#
# This is the properties file for the LDAPSource and LDAPSourceExtended class. 
# Set values appropriate to your LDAP installation.

# To setup and use the LDAPSourceExtended class please follow these steps:
#   1. Install the YAWL openLDAP schema on the openLDAP server 
#      (see file LDAP_schema_installation.txt).
#      a) Add the auxiliary object class 'yawlParticipant' to all users in the 
#         LDAP who should be able to logon to and use YAWL.
#         These attributes are mandatory: givenName, uid, sn, userPassword.
#         These attributes are optional: 
#           yawlNotes, description, yawlPrivilegeAdministrator, 
#           yawlPrivilegeCanChainExecution, yawlPrivilegeCanChooseItemToStart,
#           yawlPrivilegeCanManageCases, yawlPrivilegeCanReorder, 
#           yawlPrivilegeCanStartConcurrent, yawlPrivilegeCanViewOrgGroupItems, 
#           yawlPrivilegeCanViewTeamItems
#      b) Create Roles, Positions, Capabilities, and OrgGroup entries by using
#         the according YAWL object classes. Use nesting to define the 
#         belongsTo relation (orgGroup, roles, positions). To set the reportsTo
#         relation of positions use the yawlReportsTo attribute.
#      c) Add members to a role, capability or position by using the uniqueMember
#         attribute multiple times and pointing to the user's DN.
#
#   2. Set the connection properties to the LDAP server in this file:
#      
#      host, port, adminusername, adminpassword, authentication, binding
#
#      Please notice that the binding represents the root node from which an 
#      recursive search for YAWL object classes will be performed.
#      All other properties in this file will be ignored!
#
#   3. Edit the web.xml file of the resourceService configuring these properties:
#      a) OrgDataSource - Set this value to 'LDAPSourceExtended'
#      b) ExternalUserAuthentication - Set this value to 'true'
#      c) OrgDataRefreshRate - Set the refresh interval in minutes, eg. 360.
############################################################################

# This set of properties relate to the LDAP connection parameters
#
# The LDAP context factory
contextfactory=com.sun.jndi.ldap.LdapCtxFactory

# LDAP hostname and port number
host=localhost
port=10389

# the name of the admin user, its password, and the authentication type.
adminusername=uid=admin,ou=system
adminpassword=secret
authentication=simple

# the 'top' binding for the user set. Multiple bindings can be used, separated by
# semi-colons, e.g. "ou=users1,ou=system;ou=users2,ou=system".
binding=ou=users,ou=system

# (optional) the name of an object class to filter results against (e.g. "person").
# Result entries that don't have an object class matching the name provided will be
# ignored. Useful when a binding may contain mixed entry types. A blank or empty value
# means don't filter the results.
objectClassFilter=

# the maximum size limit for reading entries, so that entries will be loaded in 'chunks'
# of no more than the maximum size limit given. This value may be less than or
# equal to (but must not greater than) the maximum size limit configured for the
# LDAP server. If no value is given, or if the value given is zero or less, no limit
# will be used for reading entries (ie. loading of all entries in a single call to the
# LDAP server will be attempted). A value is required for this parameter only if there
# are more user entries than the maximum size limit set on the server.
maxSizeLimit=500

# set to true if user/password authentication is to be delegated to the LDAP
# server, or false if the password is to be mapped to the Resource Service's
# user object so that authentication is handled inside the service.
delegateauthentication=true

# By default, plain sockets are used to communicate with the LDAP server.
# To request that SSL sockets be used, set the following property to "ssl".
securityprotocol=

############################################################################

# This set of properties maps YAWL Participant data members (on the left) to
# the matching LDAP attribute names for each user (on the right).
#
# These first three are mandatory
userid=uid
firstname=givenName
lastname=sn

# These last two are optional - leave the right hand value blank if not required
#
# The attribute name for the user's password. This attribute is required if user
# authentication is to be handled directly by the Resource Service. It may be left
# blank if authentication is to be delegated to the LDAP host.
password=

# a boolean attribute that determines if the user has admin access to the YAWL system
administrator=

############################################################################

# Roles Attributes
# the name of the Role attribute name.
roles=o

# How the role names are formatted. Possible values: csv or enumeration
roleformat=csv
############################################################################




